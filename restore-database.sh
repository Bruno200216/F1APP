#!/bin/bash

echo "üîÑ Restaurando base de datos F1 Fantasy..."

# Variables
DB_NAME="f1fantasy"
DB_USER="f1user"
DB_PASSWORD="f1password"
DB_ROOT_PASSWORD="rootpassword"

# Crear contenedor de base de datos
echo "üì¶ Creando contenedor de base de datos..."
docker run -d \
  --name f1app-database \
  --network f1app-network \
  -e MYSQL_ROOT_PASSWORD=$DB_ROOT_PASSWORD \
  -e MYSQL_DATABASE=$DB_NAME \
  -e MYSQL_USER=$DB_USER \
  -e MYSQL_PASSWORD=$DB_PASSWORD \
  -p 3306:3306 \
  mysql:8.0

echo "‚è≥ Esperando que MySQL est√© listo..."
sleep 30

# Verificar que MySQL est√© corriendo
echo "üîç Verificando conexi√≥n a MySQL..."
docker exec f1app-database mysqladmin ping -h localhost -u root -p$DB_ROOT_PASSWORD

if [ $? -eq 0 ]; then
    echo "‚úÖ MySQL est√° funcionando correctamente"
else
    echo "‚ùå Error: MySQL no est√° respondiendo"
    exit 1
fi

# Crear las tablas b√°sicas
echo "üóÑÔ∏è Creando estructura de base de datos..."

# Copiar archivos SQL al contenedor
docker cp init.sql f1app-database:/tmp/
docker cp database-migration-complete.sql f1app-database:/tmp/
docker cp complete_setup_2025.sql f1app-database:/tmp/

# Ejecutar scripts SQL
echo "üìù Ejecutando scripts de inicializaci√≥n..."
docker exec f1app-database mysql -u root -p$DB_ROOT_PASSWORD $DB_NAME < init.sql
docker exec f1app-database mysql -u root -p$DB_ROOT_PASSWORD $DB_NAME < database-migration-complete.sql
docker exec f1app-database mysql -u root -p$DB_ROOT_PASSWORD $DB_NAME < complete_setup_2025.sql

echo "‚úÖ Base de datos restaurada exitosamente!"

# Verificar tablas creadas
echo "üìã Tablas en la base de datos:"
docker exec f1app-database mysql -u root -p$DB_ROOT_PASSWORD -e "USE $DB_NAME; SHOW TABLES;"

echo ""
echo "üéâ ¬°Base de datos restaurada!"
echo "üìä Para verificar:"
echo "   docker exec -it f1app-database mysql -u $DB_USER -p$DB_PASSWORD $DB_NAME"
echo ""
echo "üöÄ Ahora puedes levantar la aplicaci√≥n:"
echo "   docker-compose -f docker-compose.prod.yml up -d" 