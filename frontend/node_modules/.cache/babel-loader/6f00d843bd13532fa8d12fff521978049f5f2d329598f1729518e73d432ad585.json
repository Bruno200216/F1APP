{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documentos\\\\F1APP\\\\frontend\\\\src\\\\pages\\\\AdminScoresPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, Stack, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminScoresPage() {\n  _s();\n  const [step, setStep] = useState(0); // 0: elegir GP, 1: elegir tipo, 2: elegir modo, 3: posiciones esperadas\n  const [sessionType, setSessionType] = useState('');\n  const [expectedMode, setExpectedMode] = useState('');\n  const [pilots, setPilots] = useState([]);\n  const [gps, setGps] = useState([]);\n  const [selectedGP, setSelectedGP] = useState('');\n  const [expectedPositions, setExpectedPositions] = useState(Array(20).fill(''));\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [sessionPilots, setSessionPilots] = useState([]);\n  const [selectedSessionPilot, setSelectedSessionPilot] = useState('');\n  const [sessionForm, setSessionForm] = useState({});\n  const [sessionSnackbar, setSessionSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  useEffect(() => {\n    fetch('/api/pilots').then(res => res.json()).then(data => setPilots(data.pilots || []));\n    fetch('/api/grand-prix').then(res => res.json()).then(data => setGps(data.gps || []));\n  }, []);\n  useEffect(() => {\n    // Cuando se selecciona GP y modo, precargar datos si existen\n    if (selectedGP && expectedMode) {\n      fetch(`/api/admin/expected-positions?gp_index=${selectedGP}&mode=${expectedMode}`).then(res => res.json()).then(data => {\n        if (data.positions && data.positions.length > 0) {\n          // Ordenar por expected_position y mapear a array de 20 ids\n          const arr = Array(20).fill('');\n          data.positions.forEach((pos, idx) => {\n            if (pos.expected_position >= 1 && pos.expected_position <= 20) {\n              arr[pos.expected_position - 1] = pos.pilot_id;\n            }\n          });\n          setExpectedPositions(arr);\n        } else {\n          setExpectedPositions(Array(20).fill(''));\n        }\n      });\n    }\n  }, [selectedGP, expectedMode]);\n\n  // Cuando se selecciona GP y sessionType, cargar pilotos y datos existentes\n  useEffect(() => {\n    if (selectedGP && sessionType) {\n      // Cargar pilotos para el modo\n      const modeMap = {\n        race: \"R\",\n        qualy: \"Q\",\n        practice: \"P\"\n      };\n      setSessionPilots(pilots.filter(p => p.mode === modeMap[sessionType]).slice(0, 20));\n      setSelectedSessionPilot('');\n      setSessionForm({});\n    }\n  }, [selectedGP, sessionType, pilots]);\n\n  // Al seleccionar un piloto, cargar sus datos existentes\n  useEffect(() => {\n    if (selectedGP && sessionType && selectedSessionPilot) {\n      fetch(`/api/admin/session-result?gp_index=${selectedGP}&mode=${sessionType}&pilot_id=${selectedSessionPilot}`).then(res => res.json()).then(data => {\n        if (data.result) {\n          // Mapear campos booleanos a 'true'/'false' string para selects\n          const mapped = {\n            ...data.result\n          };\n          sessionFields[sessionType].forEach(field => {\n            if (field.type === 'checkbox' && field.name in mapped) {\n              if (mapped[field.name] === 1 || mapped[field.name] === true) mapped[field.name] = 'true';else if (mapped[field.name] === 0 || mapped[field.name] === false) mapped[field.name] = 'false';else if (mapped[field.name] === null || mapped[field.name] === undefined) mapped[field.name] = 'false';\n            }\n          });\n          setSessionForm(mapped);\n        } else setSessionForm({});\n      });\n    }\n  }, [selectedSessionPilot, selectedGP, sessionType]);\n\n  // Filtrar solo 20 pilotos para el modo seleccionado\n  const getModePilots = () => {\n    if (pilots.length === 0) return [];\n    // Mapear expectedMode a la letra usada en los datos\n    const modeMap = {\n      race: \"R\",\n      qualy: \"Q\",\n      practice: \"P\"\n    };\n    if (pilots[0].mode) {\n      return pilots.filter(p => p.mode === modeMap[expectedMode]).slice(0, 20);\n    }\n    return pilots.slice(0, 20);\n  };\n\n  // Opciones de pilotos disponibles para cada fila (sin repetir)\n  const getAvailablePilots = idx => {\n    const selected = expectedPositions.map((p, i) => i !== idx ? p : null).filter(Boolean);\n    return getModePilots().filter(p => !selected.includes(p.id));\n  };\n  const handleExpectedPilotChange = (idx, value) => {\n    const updated = expectedPositions.map((p, i) => i === idx ? value : p);\n    setExpectedPositions(updated);\n  };\n  const handleSaveExpected = async () => {\n    try {\n      const payload = {\n        gp_index: selectedGP,\n        mode: expectedMode,\n        positions: expectedPositions.map((pilot_id, idx) => ({\n          pilot_id,\n          expected_position: idx + 1\n        }))\n      };\n      const res = await fetch('/api/admin/expected-positions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setSnackbar({\n          open: true,\n          message: 'Posiciones guardadas',\n          severity: 'success'\n        });\n      } else {\n        setSnackbar({\n          open: true,\n          message: data.error || 'Error al guardar',\n          severity: 'error'\n        });\n      }\n    } catch (e) {\n      setSnackbar({\n        open: true,\n        message: 'Error de red',\n        severity: 'error'\n      });\n    }\n  };\n  const handleSessionFieldChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    setSessionForm(f => ({\n      ...f,\n      [name]: type === 'checkbox' ? e.target.checked : value\n    }));\n  };\n  const handleSaveSession = async () => {\n    try {\n      const payload = {\n        gp_index: selectedGP,\n        mode: sessionType,\n        pilot_id: selectedSessionPilot,\n        ...sessionForm\n      };\n      const res = await fetch('/api/admin/session-result', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setSessionSnackbar({\n          open: true,\n          message: 'Resultado guardado',\n          severity: 'success'\n        });\n      } else {\n        setSessionSnackbar({\n          open: true,\n          message: data.error || 'Error al guardar',\n          severity: 'error'\n        });\n      }\n    } catch (e) {\n      setSessionSnackbar({\n        open: true,\n        message: 'Error de red',\n        severity: 'error'\n      });\n    }\n  };\n\n  // Campos de edición por modo (sin start_position ni delta_position)\n  const sessionFields = {\n    race: [{\n      name: 'finish_position',\n      label: 'Posición final',\n      type: 'number'\n    }, {\n      name: 'points',\n      label: 'Puntos',\n      type: 'number'\n    }, {\n      name: 'positions_gained_at_start',\n      label: 'Posiciones ganadas en salida',\n      type: 'number'\n    }, {\n      name: 'clean_overtakes',\n      label: 'Adelantamientos limpios',\n      type: 'number'\n    }, {\n      name: 'net_positions_lost',\n      label: 'Posiciones netas perdidas',\n      type: 'number'\n    }, {\n      name: 'fastest_lap',\n      label: 'Vuelta rápida',\n      type: 'checkbox'\n    }, {\n      name: 'caused_vsc',\n      label: 'Causó VSC',\n      type: 'checkbox'\n    }, {\n      name: 'caused_sc',\n      label: 'Causó SC',\n      type: 'checkbox'\n    }, {\n      name: 'caused_red_flag',\n      label: 'Causó bandera roja',\n      type: 'checkbox'\n    }, {\n      name: 'dnf_driver_error',\n      label: 'DNF error piloto',\n      type: 'checkbox'\n    }, {\n      name: 'dnf_no_fault',\n      label: 'DNF sin culpa',\n      type: 'checkbox'\n    }],\n    qualy: [{\n      name: 'finish_position',\n      label: 'Posición final',\n      type: 'number'\n    }, {\n      name: 'points',\n      label: 'Puntos',\n      type: 'number'\n    }, {\n      name: 'caused_red_flag',\n      label: 'Causó bandera roja',\n      type: 'checkbox'\n    }],\n    practice: [{\n      name: 'finish_position',\n      label: 'Posición final',\n      type: 'number'\n    }, {\n      name: 'points',\n      label: 'Puntos',\n      type: 'number'\n    }, {\n      name: 'caused_red_flag',\n      label: 'Causó bandera roja',\n      type: 'checkbox'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 600,\n      mx: 'auto',\n      mt: 4,\n      p: 3,\n      background: '#181818',\n      borderRadius: 3,\n      minHeight: 300\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        mb: 3,\n        color: '#fff',\n        textAlign: 'center'\n      },\n      children: \"Administrar Puntuaciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), step === 0 && /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        sx: {\n          color: '#fff'\n        },\n        children: \"Gran Premio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedGP,\n        label: \"Gran Premio\",\n        onChange: e => setSelectedGP(e.target.value),\n        sx: {\n          color: '#fff',\n          background: '#23243a'\n        },\n        required: true,\n        children: gps.map(gp => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: gp.gp_index,\n          sx: {\n            color: '#fff',\n            background: '#23243a'\n          },\n          children: gp.name\n        }, gp.gp_index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), step === 0 && selectedGP && /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        sx: {\n          fontSize: 20\n        },\n        onClick: () => setStep('expected'),\n        children: \"Posiciones esperadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"large\",\n        sx: {\n          fontSize: 20\n        },\n        onClick: () => setStep(1),\n        children: \"Resultados sesiones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        sx: {\n          fontSize: 20\n        },\n        onClick: () => setSessionType('practice'),\n        children: \"Practice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        sx: {\n          fontSize: 20\n        },\n        onClick: () => setSessionType('race'),\n        children: \"Race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        sx: {\n          fontSize: 20\n        },\n        onClick: () => setSessionType('qualy'),\n        children: \"Qualy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"inherit\",\n        onClick: () => setStep(0),\n        sx: {\n          color: '#fff'\n        },\n        children: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), step === 'expected' && !expectedMode && /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        sx: {\n          fontSize: 20\n        },\n        onClick: () => setExpectedMode('practice'),\n        children: \"Practice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        sx: {\n          fontSize: 20\n        },\n        onClick: () => setExpectedMode('race'),\n        children: \"Race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        sx: {\n          fontSize: 20\n        },\n        onClick: () => setExpectedMode('qualy'),\n        children: \"Qualy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"inherit\",\n        onClick: () => setStep(0),\n        sx: {\n          color: '#fff'\n        },\n        children: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), step === 'expected' && expectedMode && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: '#fff',\n          mb: 2,\n          textAlign: 'center'\n        },\n        children: [\"Posiciones esperadas (\", expectedMode.charAt(0).toUpperCase() + expectedMode.slice(1), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), [...Array(20)].map((_, idx) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            flex: 2,\n            mr: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            sx: {\n              color: '#fff'\n            },\n            children: \"Piloto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: expectedPositions[idx],\n            onChange: e => handleExpectedPilotChange(idx, e.target.value),\n            sx: {\n              color: '#fff',\n              background: '#23243a'\n            },\n            required: true,\n            children: getAvailablePilots(idx).map(p => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: p.id,\n              sx: {\n                color: '#fff',\n                background: '#23243a'\n              },\n              children: p.driver_name\n            }, p.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Quitar\",\n          onClick: () => handleExpectedPilotChange(idx, ''),\n          sx: {\n            color: '#fff',\n            mx: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: '#fff',\n            minWidth: 80,\n            textAlign: 'right',\n            fontWeight: 700\n          },\n          children: [\"#\", idx + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        fullWidth: true,\n        sx: {\n          mt: 2\n        },\n        onClick: handleSaveExpected,\n        children: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"inherit\",\n        onClick: () => {\n          setExpectedMode('');\n          setExpectedPositions(Array(20).fill(''));\n        },\n        sx: {\n          color: '#fff',\n          mt: 2\n        },\n        children: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbar.open,\n        autoHideDuration: 3000,\n        onClose: () => setSnackbar({\n          ...snackbar,\n          open: false\n        }),\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: () => setSnackbar({\n            ...snackbar,\n            open: false\n          }),\n          severity: snackbar.severity,\n          sx: {\n            width: '100%'\n          },\n          children: snackbar.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), step === 1 && sessionType && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: '#fff',\n          mb: 2,\n          textAlign: 'center'\n        },\n        children: [\"Resultados de sesi\\xF3n (\", sessionType.charAt(0).toUpperCase() + sessionType.slice(1), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          sx: {\n            color: '#fff'\n          },\n          children: \"Piloto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedSessionPilot,\n          onChange: e => setSelectedSessionPilot(e.target.value),\n          sx: {\n            color: '#fff',\n            background: '#23243a'\n          },\n          children: sessionPilots.map(p => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: p.id,\n            sx: {\n              color: '#fff',\n              background: '#23243a'\n            },\n            children: p.driver_name\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), selectedSessionPilot && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          background: '#23243a',\n          borderRadius: 2,\n          p: 2,\n          mb: 2\n        },\n        children: [sessionFields[sessionType].map(field => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: field.type === 'checkbox' ? /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              shrink: true,\n              sx: {\n                color: '#fff'\n              },\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: field.name,\n              value: sessionForm[field.name] === true ? 'true' : sessionForm[field.name] === false ? 'false' : '',\n              onChange: e => setSessionForm(f => ({\n                ...f,\n                [field.name]: e.target.value === 'true'\n              })),\n              displayEmpty: true,\n              sx: {\n                color: '#fff',\n                background: '#23243a'\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'false',\n                sx: {\n                  color: '#fff',\n                  background: '#23243a'\n                },\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'true',\n                sx: {\n                  color: '#fff',\n                  background: '#23243a'\n                },\n                children: \"S\\xED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              shrink: true,\n              sx: {\n                color: '#fff'\n              },\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: field.name,\n              type: field.type,\n              value: sessionForm[field.name] || '',\n              onChange: handleSessionFieldChange,\n              style: {\n                width: '100%',\n                color: '#fff',\n                background: '#23243a',\n                border: 'none',\n                borderRadius: 4,\n                padding: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 21\n          }, this)\n        }, field.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          onClick: handleSaveSession,\n          children: \"Guardar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"inherit\",\n        onClick: () => {\n          setSessionType('');\n          setSelectedSessionPilot('');\n          setSessionForm({});\n        },\n        sx: {\n          color: '#fff',\n          mt: 2\n        },\n        children: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: sessionSnackbar.open,\n        autoHideDuration: 3000,\n        onClose: () => setSessionSnackbar({\n          ...sessionSnackbar,\n          open: false\n        }),\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: () => setSessionSnackbar({\n            ...sessionSnackbar,\n            open: false\n          }),\n          severity: sessionSnackbar.severity,\n          sx: {\n            width: '100%'\n          },\n          children: sessionSnackbar.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminScoresPage, \"5TiFRk6IQDjjy6VOSz82OEa97SQ=\");\n_c = AdminScoresPage;\nvar _c;\n$RefreshReg$(_c, \"AdminScoresPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","Stack","FormControl","InputLabel","Select","MenuItem","useNavigate","Snackbar","Alert","IconButton","CloseIcon","jsxDEV","_jsxDEV","AdminScoresPage","_s","step","setStep","sessionType","setSessionType","expectedMode","setExpectedMode","pilots","setPilots","gps","setGps","selectedGP","setSelectedGP","expectedPositions","setExpectedPositions","Array","fill","snackbar","setSnackbar","open","message","severity","sessionPilots","setSessionPilots","selectedSessionPilot","setSelectedSessionPilot","sessionForm","setSessionForm","sessionSnackbar","setSessionSnackbar","fetch","then","res","json","data","positions","length","arr","forEach","pos","idx","expected_position","pilot_id","modeMap","race","qualy","practice","filter","p","mode","slice","result","mapped","sessionFields","field","type","name","undefined","getModePilots","getAvailablePilots","selected","map","i","Boolean","includes","id","handleExpectedPilotChange","value","updated","handleSaveExpected","payload","gp_index","method","headers","body","JSON","stringify","ok","error","e","handleSessionFieldChange","target","f","checked","handleSaveSession","label","sx","maxWidth","mx","mt","background","borderRadius","minHeight","children","variant","mb","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","onChange","required","gp","spacing","size","fontSize","onClick","charAt","toUpperCase","_","display","alignItems","flex","mr","driver_name","minWidth","fontWeight","autoHideDuration","onClose","width","shrink","displayEmpty","style","border","padding","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Documentos/F1APP/frontend/src/pages/AdminScoresPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Button, Stack, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nexport default function AdminScoresPage() {\r\n  const [step, setStep] = useState(0); // 0: elegir GP, 1: elegir tipo, 2: elegir modo, 3: posiciones esperadas\r\n  const [sessionType, setSessionType] = useState('');\r\n  const [expectedMode, setExpectedMode] = useState('');\r\n  const [pilots, setPilots] = useState([]);\r\n  const [gps, setGps] = useState([]);\r\n  const [selectedGP, setSelectedGP] = useState('');\r\n  const [expectedPositions, setExpectedPositions] = useState(Array(20).fill(''));\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n  const [sessionPilots, setSessionPilots] = useState([]);\r\n  const [selectedSessionPilot, setSelectedSessionPilot] = useState('');\r\n  const [sessionForm, setSessionForm] = useState({});\r\n  const [sessionSnackbar, setSessionSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n\r\n  useEffect(() => {\r\n    fetch('/api/pilots').then(res => res.json()).then(data => setPilots(data.pilots || []));\r\n    fetch('/api/grand-prix').then(res => res.json()).then(data => setGps(data.gps || []));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Cuando se selecciona GP y modo, precargar datos si existen\r\n    if (selectedGP && expectedMode) {\r\n      fetch(`/api/admin/expected-positions?gp_index=${selectedGP}&mode=${expectedMode}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.positions && data.positions.length > 0) {\r\n            // Ordenar por expected_position y mapear a array de 20 ids\r\n            const arr = Array(20).fill('');\r\n            data.positions.forEach((pos, idx) => {\r\n              if (pos.expected_position >= 1 && pos.expected_position <= 20) {\r\n                arr[pos.expected_position - 1] = pos.pilot_id;\r\n              }\r\n            });\r\n            setExpectedPositions(arr);\r\n          } else {\r\n            setExpectedPositions(Array(20).fill(''));\r\n          }\r\n        });\r\n    }\r\n  }, [selectedGP, expectedMode]);\r\n\r\n  // Cuando se selecciona GP y sessionType, cargar pilotos y datos existentes\r\n  useEffect(() => {\r\n    if (selectedGP && sessionType) {\r\n      // Cargar pilotos para el modo\r\n      const modeMap = { race: \"R\", qualy: \"Q\", practice: \"P\" };\r\n      setSessionPilots(pilots.filter(p => p.mode === modeMap[sessionType]).slice(0, 20));\r\n      setSelectedSessionPilot('');\r\n      setSessionForm({});\r\n    }\r\n  }, [selectedGP, sessionType, pilots]);\r\n\r\n  // Al seleccionar un piloto, cargar sus datos existentes\r\n  useEffect(() => {\r\n    if (selectedGP && sessionType && selectedSessionPilot) {\r\n      fetch(`/api/admin/session-result?gp_index=${selectedGP}&mode=${sessionType}&pilot_id=${selectedSessionPilot}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.result) {\r\n            // Mapear campos booleanos a 'true'/'false' string para selects\r\n            const mapped = { ...data.result };\r\n            sessionFields[sessionType].forEach(field => {\r\n              if (field.type === 'checkbox' && field.name in mapped) {\r\n                if (mapped[field.name] === 1 || mapped[field.name] === true) mapped[field.name] = 'true';\r\n                else if (mapped[field.name] === 0 || mapped[field.name] === false) mapped[field.name] = 'false';\r\n                else if (mapped[field.name] === null || mapped[field.name] === undefined) mapped[field.name] = 'false';\r\n              }\r\n            });\r\n            setSessionForm(mapped);\r\n          } else setSessionForm({});\r\n        });\r\n    }\r\n  }, [selectedSessionPilot, selectedGP, sessionType]);\r\n\r\n  // Filtrar solo 20 pilotos para el modo seleccionado\r\n  const getModePilots = () => {\r\n    if (pilots.length === 0) return [];\r\n    // Mapear expectedMode a la letra usada en los datos\r\n    const modeMap = { race: \"R\", qualy: \"Q\", practice: \"P\" };\r\n    if (pilots[0].mode) {\r\n      return pilots.filter(p => p.mode === modeMap[expectedMode]).slice(0, 20);\r\n    }\r\n    return pilots.slice(0, 20);\r\n  };\r\n\r\n  // Opciones de pilotos disponibles para cada fila (sin repetir)\r\n  const getAvailablePilots = idx => {\r\n    const selected = expectedPositions.map((p, i) => i !== idx ? p : null).filter(Boolean);\r\n    return getModePilots().filter(p => !selected.includes(p.id));\r\n  };\r\n\r\n  const handleExpectedPilotChange = (idx, value) => {\r\n    const updated = expectedPositions.map((p, i) => i === idx ? value : p);\r\n    setExpectedPositions(updated);\r\n  };\r\n\r\n  const handleSaveExpected = async () => {\r\n    try {\r\n      const payload = {\r\n        gp_index: selectedGP,\r\n        mode: expectedMode,\r\n        positions: expectedPositions.map((pilot_id, idx) => ({ pilot_id, expected_position: idx + 1 }))\r\n      };\r\n      const res = await fetch('/api/admin/expected-positions', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setSnackbar({ open: true, message: 'Posiciones guardadas', severity: 'success' });\r\n      } else {\r\n        setSnackbar({ open: true, message: data.error || 'Error al guardar', severity: 'error' });\r\n      }\r\n    } catch (e) {\r\n      setSnackbar({ open: true, message: 'Error de red', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleSessionFieldChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    setSessionForm(f => ({ ...f, [name]: type === 'checkbox' ? e.target.checked : value }));\r\n  };\r\n\r\n  const handleSaveSession = async () => {\r\n    try {\r\n      const payload = {\r\n        gp_index: selectedGP,\r\n        mode: sessionType,\r\n        pilot_id: selectedSessionPilot,\r\n        ...sessionForm\r\n      };\r\n      const res = await fetch('/api/admin/session-result', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setSessionSnackbar({ open: true, message: 'Resultado guardado', severity: 'success' });\r\n      } else {\r\n        setSessionSnackbar({ open: true, message: data.error || 'Error al guardar', severity: 'error' });\r\n      }\r\n    } catch (e) {\r\n      setSessionSnackbar({ open: true, message: 'Error de red', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  // Campos de edición por modo (sin start_position ni delta_position)\r\n  const sessionFields = {\r\n    race: [\r\n      { name: 'finish_position', label: 'Posición final', type: 'number' },\r\n      { name: 'points', label: 'Puntos', type: 'number' },\r\n      { name: 'positions_gained_at_start', label: 'Posiciones ganadas en salida', type: 'number' },\r\n      { name: 'clean_overtakes', label: 'Adelantamientos limpios', type: 'number' },\r\n      { name: 'net_positions_lost', label: 'Posiciones netas perdidas', type: 'number' },\r\n      { name: 'fastest_lap', label: 'Vuelta rápida', type: 'checkbox' },\r\n      { name: 'caused_vsc', label: 'Causó VSC', type: 'checkbox' },\r\n      { name: 'caused_sc', label: 'Causó SC', type: 'checkbox' },\r\n      { name: 'caused_red_flag', label: 'Causó bandera roja', type: 'checkbox' },\r\n      { name: 'dnf_driver_error', label: 'DNF error piloto', type: 'checkbox' },\r\n      { name: 'dnf_no_fault', label: 'DNF sin culpa', type: 'checkbox' },\r\n    ],\r\n    qualy: [\r\n      { name: 'finish_position', label: 'Posición final', type: 'number' },\r\n      { name: 'points', label: 'Puntos', type: 'number' },\r\n      { name: 'caused_red_flag', label: 'Causó bandera roja', type: 'checkbox' },\r\n    ],\r\n    practice: [\r\n      { name: 'finish_position', label: 'Posición final', type: 'number' },\r\n      { name: 'points', label: 'Puntos', type: 'number' },\r\n      { name: 'caused_red_flag', label: 'Causó bandera roja', type: 'checkbox' },\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 600, mx: 'auto', mt: 4, p: 3, background: '#181818', borderRadius: 3, minHeight: 300 }}>\r\n      <Typography variant=\"h5\" sx={{ mb: 3, color: '#fff', textAlign: 'center' }}>Administrar Puntuaciones</Typography>\r\n      {step === 0 && (\r\n        <FormControl fullWidth sx={{ mb: 3 }}>\r\n          <InputLabel sx={{ color: '#fff' }}>Gran Premio</InputLabel>\r\n          <Select\r\n            value={selectedGP}\r\n            label=\"Gran Premio\"\r\n            onChange={e => setSelectedGP(e.target.value)}\r\n            sx={{ color: '#fff', background: '#23243a' }}\r\n            required\r\n          >\r\n            {gps.map(gp => (\r\n              <MenuItem key={gp.gp_index} value={gp.gp_index} sx={{ color: '#fff', background: '#23243a' }}>{gp.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      )}\r\n      {step === 0 && selectedGP && (\r\n        <Stack spacing={3}>\r\n          <Button variant=\"contained\" color=\"primary\" size=\"large\" sx={{ fontSize: 20 }} onClick={() => setStep('expected')}>Posiciones esperadas</Button>\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"large\" sx={{ fontSize: 20 }} onClick={() => setStep(1)}>Resultados sesiones</Button>\r\n        </Stack>\r\n      )}\r\n      {step === 1 && (\r\n        <Stack spacing={3}>\r\n          <Button variant=\"contained\" color=\"primary\" size=\"large\" sx={{ fontSize: 20 }} onClick={() => setSessionType('practice')}>Practice</Button>\r\n          <Button variant=\"contained\" color=\"primary\" size=\"large\" sx={{ fontSize: 20 }} onClick={() => setSessionType('race')}>Race</Button>\r\n          <Button variant=\"contained\" color=\"primary\" size=\"large\" sx={{ fontSize: 20 }} onClick={() => setSessionType('qualy')}>Qualy</Button>\r\n          <Button variant=\"outlined\" color=\"inherit\" onClick={() => setStep(0)} sx={{ color: '#fff' }}>Volver</Button>\r\n        </Stack>\r\n      )}\r\n      {step === 'expected' && !expectedMode && (\r\n        <Stack spacing={3}>\r\n          <Button variant=\"contained\" color=\"primary\" size=\"large\" sx={{ fontSize: 20 }} onClick={() => setExpectedMode('practice')}>Practice</Button>\r\n          <Button variant=\"contained\" color=\"primary\" size=\"large\" sx={{ fontSize: 20 }} onClick={() => setExpectedMode('race')}>Race</Button>\r\n          <Button variant=\"contained\" color=\"primary\" size=\"large\" sx={{ fontSize: 20 }} onClick={() => setExpectedMode('qualy')}>Qualy</Button>\r\n          <Button variant=\"outlined\" color=\"inherit\" onClick={() => setStep(0)} sx={{ color: '#fff' }}>Volver</Button>\r\n        </Stack>\r\n      )}\r\n      {step === 'expected' && expectedMode && (\r\n        <Box>\r\n          <Typography sx={{ color: '#fff', mb: 2, textAlign: 'center' }}>Posiciones esperadas ({expectedMode.charAt(0).toUpperCase() + expectedMode.slice(1)})</Typography>\r\n          {[...Array(20)].map((_, idx) => (\r\n            <Box key={idx} sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n              <FormControl sx={{ flex: 2, mr: 2 }}>\r\n                <InputLabel sx={{ color: '#fff' }}>Piloto</InputLabel>\r\n                <Select\r\n                  value={expectedPositions[idx]}\r\n                  onChange={e => handleExpectedPilotChange(idx, e.target.value)}\r\n                  sx={{ color: '#fff', background: '#23243a' }}\r\n                  required\r\n                >\r\n                  {getAvailablePilots(idx).map(p => (\r\n                    <MenuItem key={p.id} value={p.id} sx={{ color: '#fff', background: '#23243a' }}>{p.driver_name}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <IconButton aria-label=\"Quitar\" onClick={() => handleExpectedPilotChange(idx, '')} sx={{ color: '#fff', mx: 1 }}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography sx={{ color: '#fff', minWidth: 80, textAlign: 'right', fontWeight: 700 }}>\r\n                #{idx + 1}\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n          <Button variant=\"contained\" color=\"success\" fullWidth sx={{ mt: 2 }} onClick={handleSaveExpected}>Guardar</Button>\r\n          <Button variant=\"outlined\" color=\"inherit\" onClick={() => { setExpectedMode(''); setExpectedPositions(Array(20).fill('')); }} sx={{ color: '#fff', mt: 2 }}>Volver</Button>\r\n          <Snackbar open={snackbar.open} autoHideDuration={3000} onClose={() => setSnackbar({ ...snackbar, open: false })}>\r\n            <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n              {snackbar.message}\r\n            </Alert>\r\n          </Snackbar>\r\n        </Box>\r\n      )}\r\n      {step === 1 && sessionType && (\r\n        <Box>\r\n          <Typography sx={{ color: '#fff', mb: 2, textAlign: 'center' }}>Resultados de sesión ({sessionType.charAt(0).toUpperCase() + sessionType.slice(1)})</Typography>\r\n          <FormControl fullWidth sx={{ mb: 2 }}>\r\n            <InputLabel sx={{ color: '#fff' }}>Piloto</InputLabel>\r\n            <Select\r\n              value={selectedSessionPilot}\r\n              onChange={e => setSelectedSessionPilot(e.target.value)}\r\n              sx={{ color: '#fff', background: '#23243a' }}\r\n            >\r\n              {sessionPilots.map(p => (\r\n                <MenuItem key={p.id} value={p.id} sx={{ color: '#fff', background: '#23243a' }}>{p.driver_name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          {selectedSessionPilot && (\r\n            <Box sx={{ background: '#23243a', borderRadius: 2, p: 2, mb: 2 }}>\r\n              {sessionFields[sessionType].map(field => (\r\n                <Box key={field.name} sx={{ mb: 2 }}>\r\n                  {field.type === 'checkbox' ? (\r\n                    <FormControl fullWidth>\r\n                      <InputLabel shrink sx={{ color: '#fff' }}>{field.label}</InputLabel>\r\n                      <Select\r\n                        name={field.name}\r\n                        value={sessionForm[field.name] === true ? 'true' : sessionForm[field.name] === false ? 'false' : ''}\r\n                        onChange={e => setSessionForm(f => ({ ...f, [field.name]: e.target.value === 'true' }))}\r\n                        displayEmpty\r\n                        sx={{ color: '#fff', background: '#23243a' }}\r\n                      >\r\n                        <MenuItem value={'false'} sx={{ color: '#fff', background: '#23243a' }}>No</MenuItem>\r\n                        <MenuItem value={'true'} sx={{ color: '#fff', background: '#23243a' }}>Sí</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  ) : (\r\n                    <FormControl fullWidth>\r\n                      <InputLabel shrink sx={{ color: '#fff' }}>{field.label}</InputLabel>\r\n                      <input\r\n                        name={field.name}\r\n                        type={field.type}\r\n                        value={sessionForm[field.name] || ''}\r\n                        onChange={handleSessionFieldChange}\r\n                        style={{ width: '100%', color: '#fff', background: '#23243a', border: 'none', borderRadius: 4, padding: 8 }}\r\n                      />\r\n                    </FormControl>\r\n                  )}\r\n                </Box>\r\n              ))}\r\n              <Button variant=\"contained\" color=\"success\" fullWidth sx={{ mt: 2 }} onClick={handleSaveSession}>Guardar</Button>\r\n            </Box>\r\n          )}\r\n          <Button variant=\"outlined\" color=\"inherit\" onClick={() => { setSessionType(''); setSelectedSessionPilot(''); setSessionForm({}); }} sx={{ color: '#fff', mt: 2 }}>Volver</Button>\r\n          <Snackbar open={sessionSnackbar.open} autoHideDuration={3000} onClose={() => setSessionSnackbar({ ...sessionSnackbar, open: false })}>\r\n            <Alert onClose={() => setSessionSnackbar({ ...sessionSnackbar, open: false })} severity={sessionSnackbar.severity} sx={{ width: '100%' }}>\r\n              {sessionSnackbar.message}\r\n            </Alert>\r\n          </Snackbar>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}